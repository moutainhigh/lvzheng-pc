package com.jx.hunter.lvzhengpc.annotaion.impl;

import java.util.Calendar;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;

import com.jx.argo.ActionResult;
import com.jx.argo.BeatContext;
import com.jx.argo.interceptor.PreInterceptor;
import com.jx.blackface.tools.blackTrack.TrackLogUtils;
import com.jx.blackface.tools.blackTrack.entity.TrackInfoEntity;
import com.jx.hunter.lvzhengpc.common.CommonUtils;
import com.jx.hunter.lvzhengpc.utils.CookieUtils;

public class TracePointImpl implements PreInterceptor {

	private static String COOKIE_NAME_USER_ID = "lvuser";
	private static String DEFAULT_MODULE = "web_access";
	private static String DEFAULT_LOG_NAME = "lvzhengpcweb";
	
	@Override
	public ActionResult preExecute(BeatContext beat) {
		
		HttpServletRequest request = beat.getRequest();
		HttpServletResponse response = beat.getResponse();
		TrackInfoEntity trackLog = TrackLogUtils.getTrackLog(request, response);
		
		String userId = CommonUtils.getUserIdFormCookie(COOKIE_NAME_USER_ID, request);
		// 模块名称
		trackLog.setMoudle(DEFAULT_MODULE);
		// 用户ID
		trackLog.setUserId(userId);
		
		//这里是活动弹窗的东西
		//activeFlag(beat);
		
		TrackLogUtils.removeLog(DEFAULT_LOG_NAME);
		//System.out.println("------嘿嘿-------");
		return null;
	}
	
	
	private void activeFlag(BeatContext beat) {
		try {

			HttpServletRequest request = beat.getRequest();
			HttpServletResponse response = beat.getResponse();
			String flag = "0";
			String referer = request.getHeader("Referer");
			if (StringUtils.isNotBlank(referer) && !StringUtils.contains(referer, ".lvzheng.com")){
				String actFlag = CookieUtils.getCookieValueByName("lv_active_f", request);
				if (StringUtils.isBlank(actFlag)) {
					CookieUtils.write(response, "lv_active_f","1", getExpiresTime());
					flag = "1";
				}
			}
			beat.getModel().add("active_flag", flag);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	
	private static int getExpiresTime() {
		Calendar starCalendar = Calendar.getInstance();
		starCalendar.set(Calendar.MILLISECOND, 0);
		Date startDate=starCalendar.getTime();
		
		Calendar endCalendar = Calendar.getInstance();
		endCalendar.setTime(startDate);
		endCalendar.set(endCalendar.get(Calendar.YEAR), endCalendar.get(Calendar.MONTH), endCalendar.get(Calendar.DATE), 23, 59, 59);
		
		Date endDate=endCalendar.getTime();
		int expire=(int) ((endDate.getTime()-startDate.getTime())/1000);
		return expire;
	}

}
